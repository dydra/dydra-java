apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'

/* Static analysis for Java */
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

/* Static analysis for Groovy */
apply plugin: 'codenarc'

archivesBaseName = 'dydra'
version = file('VERSION').text.trim()
jar {
  manifest {
    attributes("Implementation-Title": "Dydra SDK for Java",
               "Implementation-Version": version)
  }
}

sourceCompatibility = 1.6
sourceSets {
  main {
    java { srcDir 'src' }
    //groovy { srcDir 'src' }
    resources { srcDir 'etc/resources' }
  }
  test {
    java { srcDir 'test' }
    groovy { srcDir 'test' }
    resources { srcDir 'etc/resources' }
  }
}

repositories {
  flatDir { dirs 'lib' }
  maven { url 'http://mvn.datagraph.org/' }
  mavenCentral()
}

dependencies {
  compile 'com.ning:async-http-client:1.8.14'
  compile 'com.fasterxml.jackson.core:jackson-core:2.2.1'
  compile 'org.openrdf.sesame:sesame-runtime:2.7.14'
  compile 'org.apache.jena:apache-jena-libs:2.12.1'
  runtime 'org.slf4j:slf4j-simple:1.6.1'
  testCompile 'org.codehaus.groovy:groovy-all:2.3.6'
  testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
}

test {
  testLogging {
    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
  }
}

checkstyle {
  configFile = file('etc/checkstyle/config.xml')
}

codenarc {
  configFile = file('etc/codenarc/ruleset.groovy')
  reportFormat = 'text'
}

findbugs {
  excludeFilter = file('etc/findbugs/excludes.xml')
  effort = 'max'
  reportLevel = 'low'
}

pmd {
  ruleSets = ['basic']
  ruleSetFiles = files('etc/pmd/ruleset.xml')
  consoleOutput = true
}

task version << { println version }
